// prisma/schema.prisma
datasource db {
  provider = "postgresql" // or mysql/sqlite depending on Render setup
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Hotel {
  id          Int          @id @default(autoincrement())
  name        String
  location    String
  description String?
  rooms       Room[]
  bookings    Booking[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Room {
  id          Int          @id @default(autoincrement())
  number      String
  type        String
  price       Float
  available   Boolean      @default(true)
  hotelId     Int
  hotel       Hotel        @relation(fields: [hotelId], references: [id])
  bookings    Booking[]
}

model Booking {
  id            Int           @id @default(autoincrement())
  userId        Int
  hotelId       Int
  roomId        Int
  hotel         Hotel         @relation(fields: [hotelId], references: [id])
  room          Room          @relation(fields: [roomId], references: [id])
  reservation   Reservation?
  reservationId Int?
  payments      Payment[]
  createdAt     DateTime      @default(now())
}

model Reservation {
  id          Int          @id @default(autoincrement())
  booking     Booking[]
  checkIn     DateTime
  checkOut    DateTime
  transaction Transaction?
}

model Payment {
  id        Int      @id @default(autoincrement())
  amount    Float
  status    String   // e.g. "pending", "paid"
  bookingId Int
  booking   Booking  @relation(fields: [bookingId], references: [id])
  createdAt DateTime @default(now())
}

model Transaction {
  id            Int      @id @default(autoincrement())
  reference     String   @unique
  amount        Float
  status        String   // "pending", "success", "failed"
  reservationId Int?
  reservation   Reservation? @relation(fields: [reservationId], references: [id])
  createdAt     DateTime @default(now())
}
