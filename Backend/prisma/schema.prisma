generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  hotels    Hotel[]  // <- this links to Hotel.owner
}

model Hotel {
  id       String  @id @default(uuid())
  name     String
  rating   Float?  @default(0.0)
  owner    User?   @relation(fields: [ownerId], references: [id])
  ownerId  String?
}

model Room {
  id          String    @id @default(uuid())
  hotel       Hotel     @relation(fields: [hotelId], references: [id])
  hotelId     String
  roomNumber  String
  type        String    // e.g., Single, Double, Suite
  price       Float
  available   Boolean   @default(true)
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Payment {
  id        String   @id @default(uuid())
  booking   Booking? @relation(fields: [bookingId], references: [id])
  bookingId String?
  amount    Float
}

model Booking {
  id       String    @id @default(uuid())
  payments Payment[] // One-to-many
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
  HOTEL_OWNER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum PaymentProvider {
  PAYSTACK
  FLUTTERWAVE
}
