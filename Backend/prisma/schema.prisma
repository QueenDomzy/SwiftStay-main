// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================
// MODELS
// =============================

model Hotel {
  id            String         @id @default(cuid())
  name          String
  location      String
  rooms         Room[]
  reservations  Reservation[]  // ðŸ”¥ Fix for Reservation â†’ Hotel
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Room {
  id            String         @id @default(cuid())
  number        String
  type          String
  price         Float
  hotelId       String
  hotel         Hotel          @relation(fields: [hotelId], references: [id])
  reservations  Reservation[]  // ðŸ”¥ Fix for Reservation â†’ Room
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Reservation {
  id            String   @id @default(cuid())
  hotelId       String
  hotel         Hotel    @relation(fields: [hotelId], references: [id])
  roomId        String
  room          Room     @relation(fields: [roomId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  bookingId     String?
  booking       Booking? @relation(fields: [bookingId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Booking {
  id           String         @id @default(cuid())
  userId       String
  user         User           @relation(fields: [userId], references: [id])
  reservations Reservation[]  // ðŸ”¥ Add this line (Booking â†’ Reservation)
  payments     Payment[]      // one booking â†’ many payments
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Payment {
  id         String   @id @default(cuid())
  amount     Float
  method     String
  bookingId  String
  booking    Booking  @relation(fields: [bookingId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String
  reservations  Reservation[]
  bookings      Booking[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
